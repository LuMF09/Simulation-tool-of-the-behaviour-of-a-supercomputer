/****************************************************************************
** Meta object code from reading C++ file 'tst_testsoftwaresimulationtest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_testsoftwaresimulationtest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_TestSoftwareSimulationTest_t {
    QByteArrayData data[22];
    char stringdata0[453];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestSoftwareSimulationTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestSoftwareSimulationTest_t qt_meta_stringdata_TestSoftwareSimulationTest = {
    {
QT_MOC_LITERAL(0, 0, 26), // "TestSoftwareSimulationTest"
QT_MOC_LITERAL(1, 27, 18), // "testRandomInt_data"
QT_MOC_LITERAL(2, 46, 0), // ""
QT_MOC_LITERAL(3, 47, 13), // "testRandomInt"
QT_MOC_LITERAL(4, 61, 21), // "testRandomDouble_data"
QT_MOC_LITERAL(5, 83, 16), // "testRandomDouble"
QT_MOC_LITERAL(6, 100, 18), // "testSetterJob_data"
QT_MOC_LITERAL(7, 119, 13), // "testSetterJob"
QT_MOC_LITERAL(8, 133, 27), // "testUserProduceRequest_data"
QT_MOC_LITERAL(9, 161, 22), // "testUserProduceRequest"
QT_MOC_LITERAL(10, 184, 23), // "testITGiveResource_data"
QT_MOC_LITERAL(11, 208, 18), // "testITGiveResource"
QT_MOC_LITERAL(12, 227, 31), // "testResearcherAskResources_data"
QT_MOC_LITERAL(13, 259, 26), // "testResearcherAskResources"
QT_MOC_LITERAL(14, 286, 27), // "testMachineIsAvailable_data"
QT_MOC_LITERAL(15, 314, 22), // "testMachineIsAvailable"
QT_MOC_LITERAL(16, 337, 17), // "testMachineUpdate"
QT_MOC_LITERAL(17, 355, 20), // "testSendMachine_data"
QT_MOC_LITERAL(18, 376, 15), // "testSendMachine"
QT_MOC_LITERAL(19, 392, 22), // "testRandomRequest_data"
QT_MOC_LITERAL(20, 415, 17), // "testRandomRequest"
QT_MOC_LITERAL(21, 433, 19) // "testAllConstructors"

    },
    "TestSoftwareSimulationTest\0"
    "testRandomInt_data\0\0testRandomInt\0"
    "testRandomDouble_data\0testRandomDouble\0"
    "testSetterJob_data\0testSetterJob\0"
    "testUserProduceRequest_data\0"
    "testUserProduceRequest\0testITGiveResource_data\0"
    "testITGiveResource\0testResearcherAskResources_data\0"
    "testResearcherAskResources\0"
    "testMachineIsAvailable_data\0"
    "testMachineIsAvailable\0testMachineUpdate\0"
    "testSendMachine_data\0testSendMachine\0"
    "testRandomRequest_data\0testRandomRequest\0"
    "testAllConstructors"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestSoftwareSimulationTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      20,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  114,    2, 0x08 /* Private */,
       3,    0,  115,    2, 0x08 /* Private */,
       4,    0,  116,    2, 0x08 /* Private */,
       5,    0,  117,    2, 0x08 /* Private */,
       6,    0,  118,    2, 0x08 /* Private */,
       7,    0,  119,    2, 0x08 /* Private */,
       8,    0,  120,    2, 0x08 /* Private */,
       9,    0,  121,    2, 0x08 /* Private */,
      10,    0,  122,    2, 0x08 /* Private */,
      11,    0,  123,    2, 0x08 /* Private */,
      12,    0,  124,    2, 0x08 /* Private */,
      13,    0,  125,    2, 0x08 /* Private */,
      14,    0,  126,    2, 0x08 /* Private */,
      15,    0,  127,    2, 0x08 /* Private */,
      16,    0,  128,    2, 0x08 /* Private */,
      17,    0,  129,    2, 0x08 /* Private */,
      18,    0,  130,    2, 0x08 /* Private */,
      19,    0,  131,    2, 0x08 /* Private */,
      20,    0,  132,    2, 0x08 /* Private */,
      21,    0,  133,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestSoftwareSimulationTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestSoftwareSimulationTest *_t = static_cast<TestSoftwareSimulationTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->testRandomInt_data(); break;
        case 1: _t->testRandomInt(); break;
        case 2: _t->testRandomDouble_data(); break;
        case 3: _t->testRandomDouble(); break;
        case 4: _t->testSetterJob_data(); break;
        case 5: _t->testSetterJob(); break;
        case 6: _t->testUserProduceRequest_data(); break;
        case 7: _t->testUserProduceRequest(); break;
        case 8: _t->testITGiveResource_data(); break;
        case 9: _t->testITGiveResource(); break;
        case 10: _t->testResearcherAskResources_data(); break;
        case 11: _t->testResearcherAskResources(); break;
        case 12: _t->testMachineIsAvailable_data(); break;
        case 13: _t->testMachineIsAvailable(); break;
        case 14: _t->testMachineUpdate(); break;
        case 15: _t->testSendMachine_data(); break;
        case 16: _t->testSendMachine(); break;
        case 17: _t->testRandomRequest_data(); break;
        case 18: _t->testRandomRequest(); break;
        case 19: _t->testAllConstructors(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestSoftwareSimulationTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestSoftwareSimulationTest.data,
      qt_meta_data_TestSoftwareSimulationTest,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *TestSoftwareSimulationTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestSoftwareSimulationTest::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_TestSoftwareSimulationTest.stringdata0))
        return static_cast<void*>(const_cast< TestSoftwareSimulationTest*>(this));
    return QObject::qt_metacast(_clname);
}

int TestSoftwareSimulationTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 20)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 20;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 20)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 20;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
